# --------------------------------------------------------------------------------
#       Copyright (c) 2018-2020 Sarah Edwards (Station X Labs, LLC, 
#       @iamevltwin, mac4n6.com). All rights reserved.

#       This software is provided "as is," without warranty of any kind,
#       express or implied.  In no event shall the author or contributors
#       be held liable for any damages arising in any way from the use of
#       this software.

#       The contents of this file are DUAL-LICENSED.  You may modify and/or
#       redistribute this software according to the terms of one of the
#       following two licenses (at your option):

#       LICENSE 1 ("BSD-like with acknowledgment clause"):

#       Permission is granted to anyone to use this software for any purpose,
#       including commercial applications, and to alter it and redistribute
#       it freely, subject to the following restrictions:

#       1. Redistributions of source code must retain the above copyright
#          notice, disclaimer, and this list of conditions.
#       2. Redistributions in binary form must reproduce the above copyright
#          notice, disclaimer, and this list of conditions in the documenta-
#          tion and/or other materials provided with the distribution.
#       3. All advertising, training, and documentation materials mentioning 
#          features or use of this software must display the following 
#          acknowledgment. Character-limited social media may abbreviate this 
#          acknowledgment to include author and APOLLO name ie: "This new 
#          feature brought to you by @iamevltwin's APOLLO". Please make an 
#          effort credit the appropriate authors on specific APOLLO modules.
#          The spirit of this clause is to give public acknowledgment to 
#          researchers where credit is due.

#             This product includes software developed by Sarah Edwards 
#             (Station X Labs, LLC, @iamevltwin, mac4n6.com) and other 
#             contributors as part of APOLLO (Apple Pattern of Life Lazy 
#             Output'er). 


#       LICENSE 2 (GNU GPL v3 or later):

#       This file is part of APOLLO (Apple Pattern of Life Lazy Output'er).

#       APOLLO is free software: you can redistribute it and/or modify
#       it under the terms of the GNU General Public License as published by
#       the Free Software Foundation, either version 3 of the License, or
#       (at your option) any later version.

#       APOLLO is distributed in the hope that it will be useful,
#       but WITHOUT ANY WARRANTY; without even the implied warranty of
#       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#       GNU General Public License for more details.

#       You should have received a copy of the GNU General Public License
#       along with APOLLO.  If not, see <https://www.gnu.org/licenses/>.
# --------------------------------------------------------------------------------


[Module Metadata]
AUTHOR=Sarah Edwards/mac4n6.com/@iamevltwin
MODULE_NOTES=Significant Locations - Vist Exit (Historical)

[Database Metadata]
DATABASE=Cloud.sqlite,Cloud-V2.sqlite
PLATFORM=IOS
VERSIONS=11,12,13,14

[Query Metadata]
QUERY_NAME=routined_cloud_visit_exit
ACTIVITY=Routined Location - Visit Exit
KEY_TIMESTAMP=VISIT EXIT

[SQL Query 13,14]
QUERY=
   SELECT
      DATETIME(ZRTLEARNEDVISITMO.ZENTRYDATE + 978307200, 'UNIXEPOCH') AS "VISIT ENTRY",
      DATETIME(ZRTLEARNEDVISITMO.ZEXITDATE + 978307200, 'UNIXEPOCH') AS "VISIT EXIT",
      (ZEXITDATE-ZENTRYDATE)/60.00 AS "VISIT TIME (MINUTES)",
      ZRTLEARNEDVISITMO.ZLOCATIONLATITUDE || ", " || ZRTLEARNEDVISITMO.ZLOCATIONLONGITUDE AS "COORDINATES",
      ZRTLEARNEDVISITMO.ZPLACE AS "PLACE ID",
      ZRTLEARNEDVISITMO.ZDATAPOINTCOUNT AS "DATA POINT COUNT",
      ZRTADDRESSMO.ZCOUNTRY AS "COUNTRY",
      ZRTADDRESSMO.ZCOUNTRYCODE AS "COUNTRY CODE",
      ZRTADDRESSMO.ZPOSTALCODE AS "POSTAL CODE",
      ZRTADDRESSMO.ZLOCALITY AS "LOCALITY",
      ZRTADDRESSMO.ZSUBLOCALITY AS "SUBLOCALITY",
      ZRTADDRESSMO.ZTHOROUGHFARE AS "THROROUGHFARE",
      ZRTADDRESSMO.ZSUBTHOROUGHFARE AS "SUBTHOROUGHFARE",
      ZRTADDRESSMO.ZSUBADMINISTRATIVEAREA AS "SUBADMINISTRATIVE AREA",  
      CAST(ZRTADDRESSMO.ZAREASOFINTEREST AS TEXT) AS "AREA OF INTEREST",
      ZRTADDRESSMO.ZOCEAN AS "OCEAN",
      ZRTADDRESSMO.ZINLANDWATER AS "INLAND WATER",
      ZRTADDRESSMO.ZISLAND AS "ISLAND",
      ZRTLEARNEDVISITMO.ZLOCATIONUNCERTAINTY AS "LOCATION UNCERTAINTY",
      ZRTLEARNEDVISITMO.ZCONFIDENCE AS "CONFIDENCE",
      DATETIME(ZRTLEARNEDVISITMO.ZCREATIONDATE + 978307200, 'UNIXEPOCH') AS "VISIT CREATION",
      DATETIME(ZRTLEARNEDVISITMO.ZEXPIRATIONDATE + 978307200, 'UNIXEPOCH') AS "VISIT EXPIRATION",
      ZRTDEVICEMO.ZDEVICECLASS AS "DEVICE CLASS",
      ZRTDEVICEMO.ZDEVICEMODEL AS "DEVICE MODEL",
      ZRTDEVICEMO.ZDEVICENAME AS "DEVICE NAME",
      DATETIME(ZRTLEARNEDPLACEMO.ZCREATIONDATE + 978307200, 'UNIXEPOCH') AS "LEARNED PLACE CREATION",
      DATETIME(ZRTLEARNEDPLACEMO.ZEXPIRATIONDATE + 978307200, 'UNIXEPOCH') AS "LEARNED PLACE EXPIRATION",
      DATETIME(ZRTADDRESSMO.ZCREATIONDATE + 978307200, 'UNIXEPOCH') AS "ADDRESS CREATION",   
      ZRTLEARNEDVISITMO.ZLOCATIONLATITUDE AS "LATITUDE",
      ZRTLEARNEDVISITMO.ZLOCATIONLONGITUDE AS "LONGITUDE",
      ZRTMAPITEMMO.ZLATITUDE || ", " || ZRTMAPITEMMO.ZLONGITUDE AS "MAP ITEM COORDINATES",
      DATETIME(ZRTMAPITEMMO.ZCREATIONDATE + 978307200, 'UNIXEPOCH') AS "MAP ITEM CREATION DATE",
      DATETIME(ZRTMAPITEMMO.ZEXPIRATIONDATE + 978307200, 'UNIXEPOCH') AS "MAP ITEM EXPIRATION DATE",
      ZRTMAPITEMMO.ZLATITUDE AS "MAP ITEM LATITUTE",
      ZRTMAPITEMMO.ZLONGITUDE AS "MAP ITEM LONGITUDE",
      ZRTMAPITEMMO.ZUNCERTAINTY AS "UNCERTAINTY",
      ZRTMAPITEMMO.ZDISPLAYLANGUAGE AS "MAP ITEM LANGUAGE",
      ZRTMAPITEMMO.ZNAME AS "MAP ITEM NAME",
      HEX(ZRTMAPITEMMO.ZGEOMAPITEMHANDLE) AS "MAP ITEM GEOMAPITEM (HEX PROTOBUF)",
      ZRTLEARNEDVISITMO.Z_PK AS "ZRTLEARNEDVISITMO TABLE ID" 
   FROM
      ZRTLEARNEDVISITMO 
      LEFT JOIN
         ZRTDEVICEMO ON ZRTLEARNEDVISITMO.ZDEVICE = ZRTDEVICEMO.Z_PK 
      LEFT JOIN
         ZRTLEARNEDPLACEMO ON ZRTLEARNEDPLACEMO.Z_PK = ZRTLEARNEDVISITMO.ZPLACE
      LEFT JOIN
         ZRTADDRESSMO ON ZRTADDRESSMO.ZMAPITEM = ZRTLEARNEDPLACEMO.ZMAPITEM
      LEFT JOIN
         ZRTMAPITEMMO ON ZRTMAPITEMMO.Z_PK = ZRTLEARNEDPLACEMO.ZMAPITEM

[SQL Query 12]
QUERY=
   SELECT
      DATETIME(ZRTLEARNEDVISITMO.ZENTRYDATE + 978307200, 'UNIXEPOCH') AS "VISIT ENTRY",
      DATETIME(ZRTLEARNEDVISITMO.ZEXITDATE + 978307200, 'UNIXEPOCH') AS "VISIT EXIT",
      (ZEXITDATE-ZENTRYDATE)/60.00 AS "VISIT TIME (MINUTES)",
      ZRTLEARNEDVISITMO.ZLOCATIONLATITUDE || ", " || ZRTLEARNEDVISITMO.ZLOCATIONLONGITUDE AS "COORDINATES",
      ZRTLEARNEDVISITMO.ZPLACE AS "PLACE ID",
      ZRTLEARNEDVISITMO.ZDATAPOINTCOUNT AS "DATA POINT COUNT",
      ZRTADDRESSMO.ZCOUNTRY AS "COUNTRY",
      ZRTADDRESSMO.ZCOUNTRYCODE AS "COUNTRY CODE",
      ZRTADDRESSMO.ZPOSTALCODE AS "POSTAL CODE",
      ZRTADDRESSMO.ZLOCALITY AS "LOCALITY",
      ZRTADDRESSMO.ZSUBLOCALITY AS "SUBLOCALITY",
      ZRTADDRESSMO.ZTHOROUGHFARE AS "THROROUGHFARE",
      ZRTADDRESSMO.ZSUBTHOROUGHFARE AS "SUBTHOROUGHFARE",
      ZRTADDRESSMO.ZSUBADMINISTRATIVEAREA AS "SUBADMINISTRATIVE AREA",  
      CAST(ZRTADDRESSMO.ZAREASOFINTEREST AS TEXT) AS "AREA OF INTEREST",
      ZRTADDRESSMO.ZOCEAN AS "OCEAN",
      ZRTADDRESSMO.ZINLANDWATER AS "INLAND WATER",
      ZRTADDRESSMO.ZISLAND AS "ISLAND",
      ZRTLEARNEDVISITMO.ZLOCATIONUNCERTAINTY AS "LOCATION UNCERTAINTY",
      ZRTLEARNEDVISITMO.ZCONFIDENCE AS "CONFIDENCE",
      DATETIME(ZRTLEARNEDVISITMO.ZCREATIONDATE + 978307200, 'UNIXEPOCH') AS "VISIT CREATION",
      DATETIME(ZRTLEARNEDVISITMO.ZEXPIRATIONDATE + 978307200, 'UNIXEPOCH') AS "VISIT EXPIRATION",
      ZRTDEVICEMO.ZDEVICECLASS AS "DEVICE CLASS",
      ZRTDEVICEMO.ZDEVICEMODEL AS "DEVICE MODEL",
      ZRTDEVICEMO.ZDEVICENAME AS "DEVICE NAME",
      DATETIME(ZRTLEARNEDPLACEMO.ZCREATIONDATE + 978307200, 'UNIXEPOCH') AS "LEARNED PLACE CREATION",
      DATETIME(ZRTLEARNEDPLACEMO.ZEXPIRATIONDATE + 978307200, 'UNIXEPOCH') AS "LEARNED PLACE EXPIRATION",
      DATETIME(ZRTADDRESSMO.ZCREATIONDATE + 978307200, 'UNIXEPOCH') AS "ADDRESS CREATION",   
      ZRTLEARNEDVISITMO.ZLOCATIONLATITUDE AS "LATITUDE",
      ZRTLEARNEDVISITMO.ZLOCATIONLONGITUDE AS "LONGITUDE",
      ZRTMAPITEMMO.ZLATITUDE || ", " || ZRTMAPITEMMO.ZLONGITUDE AS "MAP ITEM COORDINATES",
      DATETIME(ZRTMAPITEMMO.ZCREATIONDATE + 978307200, 'UNIXEPOCH') AS "MAP ITEM CREATION DATE",
      DATETIME(ZRTMAPITEMMO.ZEXPIRATIONDATE + 978307200, 'UNIXEPOCH') AS "MAP ITEM EXPIRATION DATE",
      ZRTMAPITEMMO.ZLATITUDE AS "MAP ITEM LATITUTE",
      ZRTMAPITEMMO.ZLONGITUDE AS "MAP ITEM LONGITUDE",
      ZRTMAPITEMMO.ZUNCERTAINTY AS "UNCERTAINTY",
      ZRTMAPITEMMO.ZNAME AS "MAP ITEM NAME",
      HEX(ZRTMAPITEMMO.ZGEOMAPITEMHANDLE) AS "MAP ITEM GEOMAPITEM (HEX PROTOBUF)",
      ZRTLEARNEDVISITMO.Z_PK AS "ZRTLEARNEDVISITMO TABLE ID" 
   FROM
      ZRTLEARNEDVISITMO 
      LEFT JOIN
         ZRTDEVICEMO ON ZRTLEARNEDVISITMO.ZDEVICE = ZRTDEVICEMO.Z_PK 
      LEFT JOIN
         ZRTLEARNEDPLACEMO ON ZRTLEARNEDPLACEMO.Z_PK = ZRTLEARNEDVISITMO.ZPLACE
      LEFT JOIN
         ZRTADDRESSMO ON ZRTADDRESSMO.ZMAPITEM = ZRTLEARNEDPLACEMO.ZMAPITEM
      LEFT JOIN
         ZRTMAPITEMMO ON ZRTMAPITEMMO.Z_PK = ZRTLEARNEDPLACEMO.ZMAPITEM

[SQL Query 11]
QUERY=
	SELECT
      DATETIME(ZRTLEARNEDVISITMO.ZENTRYDATE + 978307200, 'UNIXEPOCH') AS "VISIT ENTRY",
      DATETIME(ZRTLEARNEDVISITMO.ZEXITDATE + 978307200, 'UNIXEPOCH') AS "VISIT EXIT",
      (ZEXITDATE-ZENTRYDATE)/60.00 AS "VISIT TIME (MINUTES)",
      ZRTLEARNEDVISITMO.ZLOCATIONLATITUDE || ", " || ZRTLEARNEDVISITMO.ZLOCATIONLONGITUDE AS "COORDINATES",
      ZRTLEARNEDVISITMO.ZPLACE AS "PLACE ID",
      ZRTLEARNEDVISITMO.ZDATAPOINTCOUNT AS "DATA POINT COUNT",
      ZRTLEARNEDVISITMO.ZLOCATIONUNCERTAINTY AS "LOCATION UNCERTAINTY",
      ZRTLEARNEDVISITMO.ZCONFIDENCE AS "CONFIDENCE",
      DATETIME(ZRTLEARNEDVISITMO.ZCREATIONDATE + 978307200, 'UNIXEPOCH') AS "VISIT CREATION",
      DATETIME(ZRTLEARNEDVISITMO.ZEXPIRATIONDATE + 978307200, 'UNIXEPOCH') AS "VISIT EXPIRATION",
      ZRTDEVICEMO.ZDEVICECLASS AS "DEVICE CLASS",
      ZRTDEVICEMO.ZDEVICEMODEL AS "DEVICE MODEL",
      ZRTDEVICEMO.ZDEVICENAME AS "DEVICE NAME",
      DATETIME(ZRTLEARNEDPLACEMO.ZCREATIONDATE + 978307200, 'UNIXEPOCH') AS "LEARNED PLACE CREATION",
      DATETIME(ZRTLEARNEDPLACEMO.ZEXPIRATIONDATE + 978307200, 'UNIXEPOCH') AS "LEARNED PLACE EXPIRATION",
      DATETIME(ZRTLEARNEDPLACEMO.ZMAPITEMCREATIONDATE + 978307200, 'UNIXEPOCH') AS "MAP ITEM CREATION",
      HEX(ZRTLEARNEDPLACEMO.ZMAPITEMGEOMAPITEMHANDLE) AS "PLACE NAME BLOB (HEX)",
      HEX(ZRTLEARNEDPLACEMO.ZMAPITEMGEOMAPITEM) AS "PLACE GEO BLOB (HEX)",
      ZRTLEARNEDVISITMO.ZLOCATIONLATITUDE AS "LATITUDE",
      ZRTLEARNEDVISITMO.ZLOCATIONLONGITUDE AS "LONGITUDE",
      ZRTLEARNEDVISITMO.Z_PK AS "ZRTLEARNEDVISITMO TABLE ID" 
   FROM
      ZRTLEARNEDVISITMO 
      LEFT JOIN
         ZRTDEVICEMO 
         ON ZRTLEARNEDVISITMO.ZDEVICE = ZRTDEVICEMO.Z_PK 
      LEFT JOIN
         ZRTLEARNEDPLACEMO 
         ON ZRTLEARNEDPLACEMO.Z_PK = ZRTLEARNEDVISITMO.ZPLACE